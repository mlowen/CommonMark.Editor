/*! bootstrap-commonmark-editor 0.4.0 Copyright (c) 2014, 2015 Mike Lowen */
!function(){var e=function(e,n){var t=function(t){var i=this,o=n.Parser(),l=n.HtmlRenderer();i.element=e('<div class="'+t+'"></div>'),i.hide=function(){i.element.hide()},i.show=function(){i.element.show()},i.toggle=function(){i.element.toggle()},i.visible=function(){i.element.is(":visible")},i.commonmark=function(e){i.element.html(l.render(o.parse(e)))},i.html=function(){i.element.html()}},i=function(n){var t=this,i={on:function(e,n){t.element.on(e,n)},trigger:function(n,i){t.element.trigger(new e.Event(n,i))},types:{preview:"cm-editor-header-preview",edit:"cm-editor-header-edit",toggle:"cm-editor-header-toggle"}};t.element=e('<div class="cm-editor-header"></div>'),t.on={preview:function(e){i.on(i.types.preview,e)},edit:function(e){i.on(i.types.edit,e)},toggle:function(e){i.on(i.types.toggle,e)}},t.trigger={preview:function(e){i.trigger(i.types.preview,e)},edit:function(e){i.trigger(i.types.edit,e)},toggle:function(e){i.trigger(i.types.toggle)}},t.toggle=function(){n.toggle&&(c.hasClass(r)?c.removeClass(r).addClass(a):c.removeClass(a).addClass(r)),l&&l.toggle(),o.toggle()};var o=e('<ul class="tabs"></ul>').append(e("<li></li>").append(e('<a href="#" class="active">Edit</a>').click(function(){return t.trigger.edit({element:this}),!1}))).append(e("<li></li>").append(e('<a href="#">Preview</a>').click(function(){return t.trigger.preview({element:this}),!1})));if(n.inline){var l=null;if(n.toggle){var r="glyphicon-pencil",a="glyphicon-remove",c=e('<span class="glyphicon"></span>').addClass(r),g=e('<a href="#" class="pull-right toggle"></a>').append(c);g.click(function(e){e.preventDefault(),t.trigger.toggle()}),t.element.append(g)}o.hide(),n.title&&(l=e('<strong class="title"></strong>').text(n.title),t.element.append(l))}n.header||t.element.addClass("transparent"),t.element.append(o);var s=function(n){t.element.find("li a.active").removeClass("active"),e(n.element).addClass("active")};t.on.edit(s),t.on.preview(s)},o=function(n){var i=this,o=null,l={change:"cm-editor-content-change"},r=e('<textarea class="form-control"></textarea>'),a=new t("preview");n.name&&r.attr("name",n.name),i.states={edit:1,preview:2},i.element=e('<div class="cm-editor-content"></div>').append(r).append(a.element),i.state=function(e){return"undefined"==typeof e?o:void(e!=o&&(o=e,o==i.states.edit?(r.show(),a.hide()):(r.hide(),a.show())))},i.val=function(e){return"undefined"!=typeof e&&r.val()!==e&&(r.val(e),r.change()),r.val()},i.html=function(){return a.html()},i.show=function(){i.element.show()},i.hide=function(){i.element.hide()},i.toggle=function(){i.element.toggle()},i.on={change:function(e){i.element.on(l.change,e)}},i.trigger={change:function(n){i.element.trigger(new e.Event(l.change,n))}};var c=function(){var e=r.val();a.commonmark(e),i.trigger.change({text:e})};r.change(c).keydown(c).keyup(c),i.state(i.states.edit)},l=function(){var n=this,t="disabled",i=e('<button class="btn btn-default">Revert changes</button>'),o=e('<button class="btn btn-success pull-right">Save</button>'),l={save:"cm-editor-footer-save",revert:"cm-editor-footer-revert"};n.element=e('<div class="cm-editor-footer"></div>'),n.disable=function(){o.prop(t,!0),i.prop(t,!0)},n.enable=function(){o.prop(t,!1),i.prop(t,!1)},n.show=function(){n.element.show()},n.hide=function(){n.element.hide()},n.toggle=function(){n.element.toggle()},n.on={save:function(e){n.element.on(l.save,e)},revert:function(e){n.element.on(l.revert,e)}},n.trigger={save:function(){n.element.trigger(new e.Event(l.save))},revert:function(){n.element.trigger(new e.Event(l.revert))}},o.click(function(e){e.preventDefault(),n.trigger.save()}),i.click(function(e){e.preventDefault(),n.trigger.revert()}),n.element.append(i).append(o),n.disable()},r=function(n,r){var a=this,c="",g="",s={on:function(e,n){a.element.on(e,n)},trigger:function(n,t){a.element.trigger(new e.Event(n,t))},types:{change:"cm-editor-changed",inlineToggle:"cm-editor-inline-toggle"}};a.element=e(n),a.val=function(e){return"undefined"!=typeof e&&c!==e&&(c=e,u.val(c),g=u.html(),v&&v.commonmark(c),a.trigger.change({text:c})),c},a.html=function(e){return g},a.inline=function(e){if(!r.inline)return!1;var n=v.visible();return"undefined"!=typeof e&&n!=e&&(u.toggle(),v.toggle(),d.toggle(),r.save&&m.toggle(),a.trigger.inlineToggle()),v.visible()},a.on={change:function(e){s.on(s.types.change,e)},inlineToggle:function(e){s.on(s.types.inlineToggle,e)}},a.trigger={change:function(e){s.trigger(s.types.change,e)},inlineToggle:function(){s.trigger(s.types.inlineToggle)}};var d=new i(r),u=new o(r),m=r.save?new l:null,v=r.inline?new t("inline-content"):null;d.on.edit(function(){u.state(u.states.edit)}),d.on.preview(function(){u.state(u.states.preview)}),u.on.change(function(e){r.save?e.text===c?m.disable():m.enable():a.val(e.text)}),r.save&&(m.on.save(function(){a.val(u.val())}),m.on.revert(function(){u.val(a.val())})),r.inline&&(u.hide(),r.save&&m.hide(),d.on.toggle(function(){a.inline(!a.inline())}));var f=e('<div class="cm-editor-body"></div>').append(u.element);m&&f.append(m.element),v&&f.append(v.element),a.element.addClass("commonmark-editor").append(d.element).append(f),a.val(r.text)};e.fn.commonMarkEditor=function(n){return n=e.extend({header:!0,inline:!1,name:null,save:!1,text:"",title:"",toggle:!0},n),this.map(function(e,t){return new r(t,n)})}},n="function"==typeof define&&define.amd;n&&define(["jquery","commonmark"],e),jQuery&&commonmark?e(jQuery,commonmark):n||console.log("Unavble to load dependency for Bootstrap Commonmark Editor.")}();
//# sourceMappingURL=data:application/json;base64,
