/*! bootstrap-commonmark-editor 0.4.0 Copyright (c) 2014, 2015 Mike Lowen */
!function(){var e=function(e,n){var t=function(t){var i=this,o=n.Parser(),l=n.HtmlRenderer();i.element=e('<div class="'+t+'"></div>'),i.hide=function(){i.element.hide()},i.show=function(){i.element.show()},i.toggle=function(){i.element.toggle()},i.visible=function(){i.element.is(":visible")},i.commonmark=function(e){i.element.html(l.render(o.parse(e)))},i.html=function(){i.element.html()}},i=function(n){var t=this,i={preview:"cm-editor-header-preview",edit:"cm-editor-header-edit",toggle:"cm-editor-header-toggle"};t.element=e('<div class="cm-editor-header"></div>'),t.on={preview:function(e){t.element.on(i.preview,e)},edit:function(e){t.element.on(i.edit,e)},toggle:function(e){t.element.on(i.toggle,e)}},t.trigger={preview:function(n){t.element.trigger(new e.Event(i.preview,n))},edit:function(n){t.element.trigger(new e.Event(i.edit,n))},toggle:function(n){t.element.trigger(new e.Event(i.toggle))}},t.toggle=function(){n.toggle&&(c.hasClass(r)?c.removeClass(r).addClass(a):c.removeClass(a).addClass(r)),l&&l.toggle(),o.toggle()};var o=e('<ul class="tabs"></ul>').append(e("<li></li>").append(e('<a href="#" class="active">Edit</a>').click(function(){return t.trigger.edit({element:this}),!1}))).append(e("<li></li>").append(e('<a href="#">Preview</a>').click(function(){return t.trigger.preview({element:this}),!1})));if(n.inline){var l=null;if(n.toggle){var r="glyphicon-pencil",a="glyphicon-remove",c=e('<span class="glyphicon"></span>').addClass(r),g=e('<a href="#" class="pull-right toggle"></a>').append(c);g.click(function(e){e.preventDefault(),t.trigger.toggle()}),t.element.append(g)}o.hide(),n.title&&(l=e('<strong class="title"></strong>').text(n.title),t.element.append(l))}n.header||t.element.addClass("transparent"),t.element.append(o);var d=function(n){t.element.find("li a.active").removeClass("active"),e(n.element).addClass("active")};t.on.edit(d),t.on.preview(d)},o=function(n){var i=this,o=null,l={change:"cm-editor-content-change"},r=e('<textarea class="form-control"></textarea>'),a=new t("preview");n.name&&r.attr("name",n.name),i.states={edit:1,preview:2},i.element=e('<div class="cm-editor-content"></div>').append(r).append(a.element),i.state=function(e){return"undefined"==typeof e?o:void(e!=o&&(o=e,o==i.states.edit?(r.show(),a.hide()):(r.hide(),a.show())))},i.text=function(e){return"undefined"==typeof e?r.val():void(r.val()!==e&&(r.val(e),r.change()))},i.show=function(){i.element.show()},i.hide=function(){i.element.hide()},i.toggle=function(){i.element.toggle()},i.on={change:function(e){i.element.on(l.change,e)}},i.trigger={change:function(n){i.element.trigger(new e.Event(l.change,n))}};var c=function(){var e=r.val();a.commonmark(e),i.trigger.change({text:e})};r.change(c).keydown(c).keyup(c),i.state(i.states.edit)},l=function(){var n=this,t="disabled",i=e('<button class="btn btn-default">Revert changes</button>'),o=e('<button class="btn btn-success pull-right">Save</button>'),l={save:"cm-editor-footer-save",revert:"cm-editor-footer-revert"};n.element=e('<div class="cm-editor-footer"></div>'),n.disable=function(){o.prop(t,!0),i.prop(t,!0)},n.enable=function(){o.prop(t,!1),i.prop(t,!1)},n.show=function(){n.element.show()},n.hide=function(){n.element.hide()},n.toggle=function(){n.element.toggle()},n.on={save:function(e){n.element.on(l.save,e)},revert:function(e){n.element.on(l.revert,e)}},n.trigger={save:function(){n.element.trigger(new e.Event(l.save))},revert:function(){n.element.trigger(new e.Event(l.revert))}},o.click(function(e){e.preventDefault(),n.trigger.save()}),i.click(function(e){e.preventDefault(),n.trigger.revert()}),n.element.append(i).append(o),n.disable()},r=function(n,r){var a=this,c="",g={change:"cm-editor-changed",inlineToggle:"cm-editor-inline-toggle"},d=function(){m.toggle(),u.toggle(),s.toggle(),r.save&&v.toggle(),a.trigger.inlineToggle()};a.element=e(n),a.text=function(e){return"undefined"==typeof e?c:void(c!==e&&(c=e,m.text(c),u&&u.commonmark(c),a.trigger.change({text:c})))},a.inline=function(e){if(!r.inline)return!1;var n=u.visible();return"undefined"==typeof e?n:void(n!=e&&d())},a.on={change:function(e){a.element.on(g.change,e)},inlineToggle:function(e){a.element.on(g.inlineToggle,e)}},a.trigger={change:function(n){a.element.trigger(new e.Event(g.change,n))},inlineToggle:function(){a.element.trigger(new e.Event(g.inlineToggle))}};var s=new i(r),m=new o(r),v=r.save?new l:null,u=r.inline?new t("inline-content"):null;s.on.edit(function(){m.state(m.states.edit)}),s.on.preview(function(){m.state(m.states.preview)}),m.on.change(function(e){r.save?e.text===c?v.disable():v.enable():a.text(e.text)}),r.save&&(v.on.save(function(){a.text(m.text())}),v.on.revert(function(){m.text(a.text())})),r.inline&&(m.hide(),r.save&&v.hide(),s.on.toggle(d));var f=e('<div class="cm-editor-body"></div>').append(m.element);v&&f.append(v.element),u&&f.append(u.element),a.element.addClass("commonmark-editor").append(s.element).append(f),a.text(r.text)};e.fn.commonMarkEditor=function(n){return n=e.extend({header:!0,inline:!1,name:null,save:!1,text:"",title:"",toggle:!0},n),this.map(function(e,t){return new r(t,n)})}},n="function"==typeof define&&define.amd;n&&define(["jquery","commonmark"],e),jQuery&&commonmark?e(jQuery,commonmark):n||console.log("Unavble to load dependency for Bootstrap Commonmark Editor.")}();
//# sourceMappingURL=data:application/json;base64,
