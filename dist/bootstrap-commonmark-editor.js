/*! bootstrap-commonmark-editor 0.4.0 Copyright (c) 2014, 2015 Mike Lowen */
!function(){var e=function(e,n){var t=n.Parser(),i=n.HtmlRenderer(),o=function(e){return i.render(t.parse(e))},r=function(t){var i=this,o=n.Parser(),r=n.HtmlRenderer();i.element=e('<div class="'+t+'"></div>'),i.hide=function(){i.element.hide()},i.show=function(){i.element.show()},i.toggle=function(){i.element.toggle()},i.commonmark=function(e){i.element.html(r.render(o.parse(e)))},i.html=function(){i.element.html()}},l=function(n){var t=this,i={preview:"cm-editor-header-preview",edit:"cm-editor-header-edit",toggle:"cm-editor-header-toggle"};t.element=e('<div class="cm-editor-header"></div>'),t.on={preview:function(e){t.element.on(i.preview,e)},edit:function(e){t.element.on(i.edit,e)},toggle:function(e){t.element.on(i.toggle,e)}},t.trigger={preview:function(n){t.element.trigger(new e.Event(i.preview,n))},edit:function(n){t.element.trigger(new e.Event(i.edit,n))},toggle:function(n){t.element.trigger(new e.Event(i.toggle))}},t.toggle=function(){n.toggle&&(c.hasClass(l)?c.removeClass(l).addClass(a):c.removeClass(a).addClass(l)),r&&r.toggle(),o.toggle()};var o=e('<ul class="tabs"></ul>').append(e("<li></li>").append(e('<a href="#" class="active">Edit</a>').click(function(){return t.trigger.edit({element:this}),!1}))).append(e("<li></li>").append(e('<a href="#">Preview</a>').click(function(){return t.trigger.preview({element:this}),!1})));if(n.inline){var r=null;if(n.toggle){var l="glyphicon-pencil",a="glyphicon-remove",c=e('<span class="glyphicon"></span>').addClass(l),g=e('<a href="#" class="pull-right toggle"></a>').append(c);g.click(function(e){e.preventDefault(),t.trigger.toggle()}),t.element.append(g)}o.hide(),n.title&&(r=e('<strong class="title"></strong>').text(n.title),t.element.append(r))}n.header||t.element.addClass("transparent"),t.element.append(o);var d=function(n){t.element.find("li a.active").removeClass("active"),e(n.element).addClass("active")};t.on.edit(d),t.on.preview(d)},a=function(n){var t=this,i=null,o={change:"cm-editor-content-change"},l=e('<textarea class="form-control"></textarea>'),a=new r("preview");n.name&&l.attr("name",n.name),t.states={edit:1,preview:2},t.element=e('<div class="cm-editor-content"></div>').append(l).append(a.element),t.state=function(e){return"undefined"==typeof e?i:void(e!=i&&(i=e,i==t.states.edit?(l.show(),a.hide()):(l.hide(),a.show())))},t.text=function(e){return"undefined"==typeof e?l.val():void(l.val()!==e&&(l.val(e),l.change()))},t.show=function(){t.element.show()},t.hide=function(){t.element.hide()},t.toggle=function(){t.element.toggle()},t.on={change:function(e){t.element.on(o.change,e)}},t.trigger={change:function(n){t.element.trigger(new e.Event(o.change,n))}};var c=function(){var e=l.val();a.commonmark(e),t.trigger.change({text:e})};l.change(c).keydown(c).keyup(c),t.state(t.states.edit)},c=function(){var n=this,t="disabled",i=e('<button class="btn btn-default">Revert changes</button>'),o=e('<button class="btn btn-success pull-right">Save</button>'),r={save:"cm-editor-footer-save",revert:"cm-editor-footer-revert"};n.element=e('<div class="cm-editor-footer"></div>'),n.disable=function(){o.prop(t,!0),i.prop(t,!0)},n.enable=function(){o.prop(t,!1),i.prop(t,!1)},n.show=function(){n.element.show()},n.hide=function(){n.element.hide()},n.toggle=function(){n.element.toggle()},n.on={save:function(e){n.element.on(r.save,e)},revert:function(e){n.element.on(r.revert,e)}},n.trigger={save:function(){n.element.trigger(new e.Event(r.save))},revert:function(){n.element.trigger(new e.Event(r.revert))}},o.click(function(e){e.preventDefault(),n.trigger.save()}),i.click(function(e){e.preventDefault(),n.trigger.revert()}),n.element.append(i).append(o),n.disable()},g=function(n,t){var i=this,r="",g={change:"cm-editor-changed",inlineToggle:"cm-editor-inline-toggle"},d=function(){m.toggle(),v.toggle(),s.toggle(),t.save&&u.toggle(),i.trigger.inlineToggle()};i.element=e(n),i.text=function(e){return"undefined"==typeof e?r:void(r!==e&&(r=e,m.text(r),v&&v.html(o(r)),i.trigger.change({text:r})))},i.inline=function(e){if(!t.inline)return!1;var n=v.is(":visible");return"undefined"==typeof e?n:void(n!=e&&d())},i.on={change:function(e){i.element.on(g.change,e)},inlineToggle:function(e){i.element.on(g.inlineToggle,e)}},i.trigger={change:function(n){i.element.trigger(new e.Event(g.change,n))},inlineToggle:function(){i.element.trigger(new e.Event(g.inlineToggle))}};var s=new l(t),m=new a(t),u=t.save?new c:null,v=t.inline?e('<div class="inline-content"></div>'):null;s.on.edit(function(){m.state(m.states.edit)}),s.on.preview(function(){m.state(m.states.preview)}),m.on.change(function(e){t.save?e.text===r?u.disable():u.enable():i.text(e.text)}),t.save&&(u.on.save(function(){i.text(m.text())}),u.on.revert(function(){m.text(i.text())})),t.inline&&(m.hide(),t.save&&u.hide(),s.on.toggle(d));var f=e('<div class="cm-editor-body"></div>').append(m.element);u&&f.append(u.element),v&&f.append(v),i.element.addClass("commonmark-editor").append(s.element).append(f),i.text(t.text)};e.fn.commonMarkEditor=function(n){return n=e.extend({header:!0,inline:!1,name:null,save:!1,text:"",title:"",toggle:!0},n),this.map(function(e,t){return new g(t,n)})}},n="function"==typeof define&&define.amd;n&&define(["jquery","commonmark"],e),jQuery&&commonmark?e(jQuery,commonmark):n||console.log("Unavble to load dependency for Bootstrap Commonmark Editor.")}();
//# sourceMappingURL=data:application/json;base64,
